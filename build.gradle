plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.runtime' version '1.12.7'
}

group 'ir.shariari'
version '1.4-ALPHA'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'ir.shahriari.periodictable.Launcher'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls']
}

dependencies {
    implementation 'org.openjfx:javafx-controls:17.0.6:linux'
    implementation 'org.openjfx:javafx-controls:17.0.6:win'

    implementation 'org.openjfx:javafx-swing:17.0.6:linux'
    implementation 'org.openjfx:javafx-swing:17.0.6:win'

    implementation 'org.openjfx:javafx-graphics:17.0.6:linux'
    implementation 'org.openjfx:javafx-graphics:17.0.6:win'

    implementation 'org.openjfx:javafx-base:17.0.6:linux'
    implementation 'org.openjfx:javafx-base:17.0.6:win'

    implementation 'org.json:json:20220924'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    imageZip = project.file("${buildDir}/distributions/${project.name}.zip")
    launcher {
        noConsole = true
    }
}

runtimeZip {
    group = 'distribution'
}
